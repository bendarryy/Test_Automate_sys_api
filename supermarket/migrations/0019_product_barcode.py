# Generated by Django 4.1.2 on 2025-06-15 02:47

from django.db import migrations, models
import uuid


def generate_barcode(apps, schema_editor):
    Product = apps.get_model("supermarket", "Product")

    for product in Product.objects.all():
        while True:
            # Get the first 8 digits from system ID and product ID
            system_id = str(product.system.id).zfill(3)
            product_id = str(product.id).zfill(5)
            prefix = f"{system_id}{product_id}"

            # Generate remaining 5 digits using UUID
            unique_part = str(uuid.uuid4().int)[:5]

            # Combine to create 13-digit barcode
            barcode = f"{prefix}{unique_part}"

            # Ensure it's exactly 13 digits
            barcode = barcode[:13]

            # Check if this barcode already exists
            if not Product.objects.filter(barcode=barcode).exists():
                product.barcode = barcode
                product.save(update_fields=["barcode"])
                break


def reverse_barcode(apps, schema_editor):
    Product = apps.get_model("supermarket", "Product")
    Product.objects.all().update(barcode=None)


class Migration(migrations.Migration):

    dependencies = [
        ("supermarket", "0018_populate_unit_cost"),
    ]

    operations = [
        migrations.AddField(
            model_name="product",
            name="barcode",
            field=models.CharField(blank=True, max_length=13, unique=True, null=True),
        ),
        migrations.RunPython(generate_barcode, reverse_barcode),
    ]
