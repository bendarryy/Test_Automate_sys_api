# Generated by Django 5.1.7 on 2025-06-10 13:58

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0019_system_custom_link"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ContactInformation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("email", models.EmailField(max_length=254)),
                ("phone", models.CharField(max_length=20)),
                ("whatsapp", models.CharField(blank=True, max_length=20)),
                ("website", models.URLField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name="Location",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=9, null=True
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=9, null=True
                    ),
                ),
                ("address", models.TextField(blank=True)),
                ("custom_link", models.URLField(blank=True, max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="OpeningHours",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "day",
                    models.IntegerField(
                        choices=[
                            (0, "Monday"),
                            (1, "Tuesday"),
                            (2, "Wednesday"),
                            (3, "Thursday"),
                            (4, "Friday"),
                            (5, "Saturday"),
                            (6, "Sunday"),
                        ]
                    ),
                ),
                ("open_time", models.TimeField()),
                ("close_time", models.TimeField()),
                ("is_closed", models.BooleanField(default=False)),
                ("is_24_hours", models.BooleanField(default=False)),
            ],
            options={
                "ordering": ["day"],
            },
        ),
        migrations.CreateModel(
            name="PublicProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "logo",
                    models.ImageField(blank=True, null=True, upload_to="public/logos/"),
                ),
                ("public_title", models.CharField(max_length=200)),
                ("public_description", models.TextField()),
                (
                    "menu_file",
                    models.FileField(blank=True, null=True, upload_to="public/menus/"),
                ),
                ("primary_color", models.CharField(default="#000000", max_length=7)),
                ("secondary_color", models.CharField(default="#FFFFFF", max_length=7)),
            ],
        ),
        migrations.CreateModel(
            name="PublicSliderImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image", models.ImageField(upload_to="public/slider/")),
                ("caption", models.CharField(blank=True, max_length=200)),
                ("order", models.PositiveIntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
                ("link", models.URLField(blank=True, null=True)),
            ],
            options={
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="RestaurantData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("number_of_tables", models.PositiveIntegerField(default=15)),
            ],
        ),
        migrations.CreateModel(
            name="SocialMediaLink",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "platform",
                    models.CharField(
                        choices=[
                            ("facebook", "Facebook"),
                            ("instagram", "Instagram"),
                            ("twitter", "Twitter"),
                            ("linkedin", "LinkedIn"),
                            ("youtube", "YouTube"),
                            ("tiktok", "TikTok"),
                        ],
                        max_length=20,
                    ),
                ),
                ("url", models.URLField()),
                ("is_active", models.BooleanField(default=True)),
                ("order", models.PositiveIntegerField(default=0)),
            ],
            options={
                "ordering": ["order"],
            },
        ),
        migrations.RemoveField(
            model_name="system",
            name="custom_link",
        ),
        migrations.RemoveField(
            model_name="system",
            name="description",
        ),
        migrations.RemoveField(
            model_name="system",
            name="latitude",
        ),
        migrations.RemoveField(
            model_name="system",
            name="longitude",
        ),
        migrations.RemoveField(
            model_name="system",
            name="phone_number",
        ),
        migrations.AlterField(
            model_name="system",
            name="created_at",
            field=models.DateTimeField(auto_now_add=True),
        ),
        migrations.AlterField(
            model_name="system",
            name="owner",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="owned_systems",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="system",
            name="updated_at",
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name="system",
            name="uuid",
            field=models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
        ),
        migrations.AddIndex(
            model_name="system",
            index=models.Index(fields=["owner"], name="core_system_owner_i_d2aaee_idx"),
        ),
        migrations.AddIndex(
            model_name="system",
            index=models.Index(
                fields=["category"], name="core_system_categor_8471c1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="system",
            index=models.Index(
                fields=["is_active"], name="core_system_is_acti_7d45c5_idx"
            ),
        ),
        migrations.AddField(
            model_name="contactinformation",
            name="system",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="contact_info",
                to="core.system",
            ),
        ),
        migrations.AddField(
            model_name="location",
            name="system",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="location",
                to="core.system",
            ),
        ),
        migrations.AddField(
            model_name="openinghours",
            name="system",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="opening_hours",
                to="core.system",
            ),
        ),
        migrations.AddField(
            model_name="publicprofile",
            name="system",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="public_profile",
                to="core.system",
            ),
        ),
        migrations.AddField(
            model_name="publicsliderimage",
            name="system",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="slider_images",
                to="core.system",
            ),
        ),
        migrations.AddField(
            model_name="restaurantdata",
            name="system",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="restaurant_data",
                to="core.system",
            ),
        ),
        migrations.AddField(
            model_name="socialmedialink",
            name="system",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="social_links",
                to="core.system",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="openinghours",
            unique_together={("system", "day")},
        ),
        migrations.AddIndex(
            model_name="publicsliderimage",
            index=models.Index(
                fields=["system", "order"], name="core_public_system__8ccf6c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="publicsliderimage",
            index=models.Index(
                fields=["is_active"], name="core_public_is_acti_34e4a1_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="publicsliderimage",
            unique_together={("system", "order")},
        ),
        migrations.AddIndex(
            model_name="socialmedialink",
            index=models.Index(
                fields=["system", "platform"], name="core_social_system__02046a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="socialmedialink",
            index=models.Index(
                fields=["is_active"], name="core_social_is_acti_8aa57d_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="socialmedialink",
            unique_together={("system", "platform")},
        ),
    ]
